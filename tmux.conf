# remap prefix to CTRL+a
set -g prefix C-a
bind C-a send-prefix
unbind C-b
unbind p

# set mouse control
set -g mouse on

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

set -g history-limit 50000

# set terminal 256color
set -g default-terminal "screen-256color"

# make delay minimal
set -sg escape-time 0

# split pane with | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind p previous-window

bind N command-prompt 'new-session -c "#{pane_current_path}" -s %%'
bind c new-window -c "#{pane_current_path}"

bind r source-file ~/.tmux.conf

# default statusbar colors
set-option -g status-bg colour235
set-option -g status-fg colour136
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg colour166
set-window-option -g window-status-current-bg default

# pane border color
set-option -g pane-border-fg colour236
set-option -g pane-active-border-fg colour244

# message text
set-option -g message-bg colour235
set-option -g message-fg colour166

# pane number display
set-option -g display-panes-active-colour colour33
set-option -g display-panes-colour colour166

set -g status-justify left
setw -g monitor-activity off
set -g visual-activity off

# custom status line
set -g status-left ""
set -g status-right "#(whoami)@#H#[default] "

# Smart pane switching with awareness of vim splits
is_vim='tmux show-env tmux_navigator_bypass_#{pane_id} >/dev/null 2>&1 \
  || echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# renumber windows automatically when one gets deleted
set-option -g renumber-windows on

setw -g mode-keys vi

# copy and paste
bind Escape copy-mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy Y copy-pipe "xclip -sel clip -i"

unbind Enter
bind-key Enter resize-pane -Z

# move current window
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

bind-key -nr C-Up resize-pane -U
bind-key -nr C-Down resize-pane -D
bind-key -nr C-Left resize-pane -L
bind-key -nr C-Right resize-pane -R
